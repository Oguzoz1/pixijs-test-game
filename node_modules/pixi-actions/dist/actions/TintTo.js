import * as PIXI from 'pixi.js';
import TargetedAction from './TargetedAction';
import Interpolations from '../Interpolations';
export default class TintTo extends TargetedAction {
    constructor(target, tint, seconds, interpolation = Interpolations.linear) {
        super(target, seconds);
        this.tintableTarget = null;
        this.interpolation = interpolation;
        this.tint = PIXI.utils.hex2rgb(tint);
        if (this.target instanceof PIXI.Sprite) {
            this.tintableTarget = this.target;
        }
    }
    tick(delta) {
        if (!this.tintableTarget) {
            return true;
        }
        if (this.time === 0) {
            this.startTint = PIXI.utils.hex2rgb(this.tintableTarget.tint);
        }
        this.time += delta;
        const factor = this.interpolation(this.timeDistance);
        const currentTint = [0, 0, 0];
        for (let i = 0; i < currentTint.length; i++) {
            currentTint[i] = this.startTint[i] + (this.tint[i] - this.startTint[i]) * factor;
        }
        this.tintableTarget.tint = PIXI.utils.rgb2hex(currentTint);
        return this.timeDistance >= 1;
    }
    reset() {
        super.reset();
        this.time = 0;
        return this;
    }
}
;
//# sourceMappingURL=TintTo.js.map